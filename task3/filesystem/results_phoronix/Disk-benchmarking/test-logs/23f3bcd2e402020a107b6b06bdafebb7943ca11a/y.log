#####
y - Run 1
2022-01-05 18:58:07
#####

#  ./fs_mark  -d  scratch  -L  20  -s  1048576  -n  1000 
#	Version 3.3, 1 thread(s) starting at Wed Jan  5 18:57:43 2022
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 1048576 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.

FSUse%        Count         Size    Files/sec     App Overhead
     6         1000      1048576       1056.9             5878
     7         2000      1048576       1061.6             5810
     8         3000      1048576       1058.4             5783
     9         4000      1048576       1059.6             5734
    10         5000      1048576       1058.6             5773
    11         6000      1048576       1055.0             5794
    12         7000      1048576       1056.6             5816
    13         8000      1048576       1054.3             5908
    14         9000      1048576       1051.2             5953
    16        10000      1048576       1060.1             6007
    17        11000      1048576       1029.6             6704
    18        12000      1048576       1039.7             6142
    19        13000      1048576       1053.7             5771
    20        14000      1048576       1061.0             5760
    21        15000      1048576       1064.7             5674
    22        16000      1048576       1053.5             6027
    23        17000      1048576       1052.2             5893
    24        18000      1048576       1053.7             5842
    25        19000      1048576       1051.9             5873
    26        20000      1048576       1049.1             5859

#####
y - Run 2
2022-01-05 18:58:32
#####

#  ./fs_mark  -d  scratch  -L  20  -s  1048576  -n  1000 
#	Version 3.3, 1 thread(s) starting at Wed Jan  5 18:58:09 2022
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 1048576 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.

FSUse%        Count         Size    Files/sec     App Overhead
     6         1000      1048576       1039.0             5888
     7         2000      1048576       1030.0             6014
     8         3000      1048576       1055.4             5881
     9         4000      1048576       1047.5             5872
    10         5000      1048576       1045.3             5932
    11         6000      1048576       1052.5             5973
    12         7000      1048576       1054.8             5873
    13         8000      1048576       1046.7             5905
    14         9000      1048576       1048.6             5823
    16        10000      1048576       1046.3             5941
    17        11000      1048576       1048.1             5901
    18        12000      1048576       1047.6             5944
    19        13000      1048576       1053.0             5779
    20        14000      1048576       1054.2             5875
    21        15000      1048576       1056.2             5864
    22        16000      1048576       1053.3             5951
    23        17000      1048576       1057.2             5986
    24        18000      1048576       1040.7             6173
    25        19000      1048576       1035.3             6192
    26        20000      1048576       1050.0             6011

#####
y - Run 3
2022-01-05 18:58:55
#####

#  ./fs_mark  -d  scratch  -L  20  -s  1048576  -n  1000 
#	Version 3.3, 1 thread(s) starting at Wed Jan  5 18:58:34 2022
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 1048576 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.

FSUse%        Count         Size    Files/sec     App Overhead
     6         1000      1048576       1046.7             5858
     7         2000      1048576       1054.5             5737
     8         3000      1048576       1052.8             5841
     9         4000      1048576       1060.2             5866
    10         5000      1048576       1058.3             5844
    11         6000      1048576       1058.7             5912
    12         7000      1048576       1051.5             5863
    13         8000      1048576       1051.9             5853
    14         9000      1048576       1056.3             5851
    16        10000      1048576       1053.1             5840
    17        11000      1048576       1059.7             5876
    18        12000      1048576       1053.0             5846
    19        13000      1048576       1045.7             5784
    20        14000      1048576       1050.6             5822
    21        15000      1048576       1060.6             5724
    22        16000      1048576       1056.0             5839
    23        17000      1048576       1047.6             5933
    24        18000      1048576       1049.9             5846
    25        19000      1048576       1047.6             5921
    26        20000      1048576       1052.1             5796

